services:
  # Tempo runs as user 10001, and docker compose creates the volume as root.
  # As such, we need to chown the volume in order for Tempo to start correctly
  init:
    container_name: Init_Tempo
    image: &tempoImage grafana/tempo:${TEMPO_VER}
    user: root
    entrypoint:
      - "chown"
      - "10001:10001"
      - "/var/tempo"
    volumes:
      - ./tempo-data:/var/tempo

  memcached:
    image: memcached:${MEMCACHED_VER}
    container_name: memcached
    ports:
      - "11211:11211"
    environment:
      - MEMCACHED_MAX_MEMORY=64m  # Set the maximum memory usage
      - MEMCACHED_THREADS=4       # Number of threads to use

  tempo:
    container_name: Tempo
    image: *tempoImage
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./config/tempo.yaml:/etc/tempo.yaml
      - ./tempo-data:/var/tempo
    ports:
      - ${TEMPO_JAEGER_PORT}:14268  # jaeger ingest
      - ${TEMPO_PORT}:3200   # tempo
      - ${TEMPO_GRPC}:9095 # tempo grpc
      - ${TEMPO_OTLP_GRCP}:4317  # otlp grpc
      - $TEMPO_OTLP_HTTP:4318  # otlp http
      - ${TEMPO_OTLP_ZIPKIN}:9411   # zipkin
    depends_on:
      - init
      - memcached

  prometheus:
    container_name: Prometheus_Tempo
    image: prom/prometheus:${PROMETHEUS_VER}
    command:
      - --config.file=/etc/prometheus.yaml
      - --web.enable-remote-write-receiver
      - --enable-feature=exemplar-storage
      - --enable-feature=native-histograms
    volumes:
      - ./config/prometheus.yaml:/etc/prometheus.yaml
    hostname: prometheus_tempo
    ports:
      - ${PROMETHEUS_PORT}:9090